/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControladorCitas;
import Modelo.Archivo;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.Font;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

/**
 *
 * @author kille
 */
public class Citas extends javax.swing.JInternalFrame {
    private ControladorCitas cCitas;
    private Archivo arch;
    public JComboBox<String> getHoras() {
        return horas;
    }

    public JTextField getTxtCedulaMedic() {
        return txtCedulaMedic;
    }

    public JTextField getTxtCedulaPaciente() {
        return txtCedulaPaciente;
    }

 
    public JTextField getTxtFechaPaciente() {
        return txtFechaPaciente;
    }

    public JTextField getTxtNombreMedico() {
        return txtNombreMedico;
    }

    public JTextField getTxtNombrePaciente() {
        return txtNombrePaciente;
    }

    public JDateChooser getTxtFecha() {
        return txtFecha;
    }


    public void setTxtFechaPaciente(Date txtFechaPaciente) {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaComoCadena = sdf.format(txtFechaPaciente);
        this.txtFechaPaciente.setText(fechaComoCadena);
    }

    public void setTxtNombreMedico(String txtNombreMedico) {
        this.txtNombreMedico.setText(txtNombreMedico);
    }

    public void setTxtNombrePaciente(String txtNombrePaciente) {
        this.txtNombrePaciente.setText(txtNombrePaciente);
    }

    public void setTxtEspecialidad(String txtEspecialidad) {
        this.txtEspecialidad.setText(txtEspecialidad);
    }

   
    
    
    public void cargarHora(){
            horas.addItem("7 am"); 
            horas.addItem("8 am");        
            horas.addItem("9 am");  
            horas.addItem("10 am");    
            horas.addItem("11 am");          
            horas.addItem("12 pm");        
            horas.addItem("1 pm");        
            horas.addItem("2 pm");           
            horas.addItem("3 pm");
            horas.addItem("4 pm");       
        }
    public Citas() {
        initComponents();
        cCitas= new ControladorCitas(this);
        this.txtDatoMedico.setVisible(false);
        this.txtDatoPaciente.setVisible(false);
         this.getContentPane().setBackground(new Color(85,151,248));
        cargarHora();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jSpinner1 = new javax.swing.JSpinner();
        jProgressBar1 = new javax.swing.JProgressBar();
        txtCedulaMedic = new javax.swing.JTextField();
        txtCedulaPaciente = new javax.swing.JTextField();
        horas = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtDatoMedico = new javax.swing.JPanel();
        txtNombreMedico = new javax.swing.JTextField();
        txtEspecialidad = new javax.swing.JTextField();
        txtDatoPaciente = new javax.swing.JPanel();
        txtNombrePaciente = new javax.swing.JTextField();
        txtFechaPaciente = new javax.swing.JTextField();
        txtFecha = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);

        txtCedulaMedic.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        txtCedulaMedic.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cedula del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N
        txtCedulaMedic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaMedicActionPerformed(evt);
            }
        });
        txtCedulaMedic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaMedicKeyReleased(evt);
            }
        });

        txtCedulaPaciente.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        txtCedulaPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cedula del paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N
        txtCedulaPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCedulaPacienteKeyReleased(evt);
            }
        });

        horas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Horas" }));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Metro-Save-Blue-256.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Icon-merge.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtDatoMedico.setBackground(new java.awt.Color(0, 153, 204));
        txtDatoMedico.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Datos del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N

        txtNombreMedico.setEditable(false);
        txtNombreMedico.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        txtNombreMedico.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Nombre del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N

        txtEspecialidad.setEditable(false);
        txtEspecialidad.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        txtEspecialidad.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Especialdiad del medico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N
        txtEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEspecialidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout txtDatoMedicoLayout = new javax.swing.GroupLayout(txtDatoMedico);
        txtDatoMedico.setLayout(txtDatoMedicoLayout);
        txtDatoMedicoLayout.setHorizontalGroup(
            txtDatoMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtDatoMedicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNombreMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        txtDatoMedicoLayout.setVerticalGroup(
            txtDatoMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtDatoMedicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txtDatoMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtDatoPaciente.setBackground(new java.awt.Color(0, 153, 204));
        txtDatoPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Datos del paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N
        txtDatoPaciente.setPreferredSize(new java.awt.Dimension(233, 182));

        txtNombrePaciente.setEditable(false);
        txtNombrePaciente.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        txtNombrePaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Nombre del paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N

        txtFechaPaciente.setEditable(false);
        txtFechaPaciente.setFont(new java.awt.Font("Lucida Calligraphy", 0, 12)); // NOI18N
        txtFechaPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fecha de nacimiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Calligraphy", 0, 12))); // NOI18N

        javax.swing.GroupLayout txtDatoPacienteLayout = new javax.swing.GroupLayout(txtDatoPaciente);
        txtDatoPaciente.setLayout(txtDatoPacienteLayout);
        txtDatoPacienteLayout.setHorizontalGroup(
            txtDatoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtDatoPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNombrePaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFechaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        txtDatoPacienteLayout.setVerticalGroup(
            txtDatoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtDatoPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txtDatoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/57477.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(horas, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtCedulaMedic, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtCedulaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton1)
                        .addGap(6, 6, 6)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDatoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDatoPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCedulaPaciente)
                    .addComponent(txtCedulaMedic)
                    .addComponent(horas)
                    .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDatoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCedulaMedicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaMedicActionPerformed
        
    }//GEN-LAST:event_txtCedulaMedicActionPerformed

    private void txtCedulaMedicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaMedicKeyReleased
        if (cCitas.buscarMedico()== true) {
            txtCedulaMedic.setForeground(Color.GREEN);
            this.txtDatoMedico.setVisible(true);
            this.cCitas.agregarDatosMedico();
        }else{
        txtCedulaMedic.setForeground(Color.RED);
        this.txtDatoMedico.setVisible(false);
        }
    }//GEN-LAST:event_txtCedulaMedicKeyReleased

    private void txtCedulaPacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaPacienteKeyReleased
       if (cCitas.buscarPaciente()== true) {
            txtCedulaPaciente.setForeground(Color.GREEN);
             this.txtDatoPaciente.setVisible(true);
             this.cCitas.agregarDatosPaciente();
        }else{
        txtCedulaPaciente.setForeground(Color.RED);
       this.txtDatoPaciente.setVisible(false);
        }
    }//GEN-LAST:event_txtCedulaPacienteKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (cCitas.limitarCitas()==true) {
              SimpleDateFormat fecha= new SimpleDateFormat("dd-MM-yyyy");
    String fechas= fecha.format(this.txtFecha.getDate().getTime());
    String hora=(String) this.horas.getSelectedItem();
            arch = new Archivo(this.txtCedulaPaciente.getText()+"["+fechas+"]"+"{"+hora+"}","C:\\Users\\kille\\Documents\\NetBeansProjects\\Consultorio Medico\\Citas",".xml");
        for (int temp = 0; temp < arch.listaCaracteristicas.getLength(); temp++) {
                 arch.nodo = arch.listaCaracteristicas.item(temp);
                if (arch.nodo.getNodeType() == Node.ELEMENT_NODE) {
                    Element elemento = (Element) arch.nodo;
                }
                     }
        this.guardar();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    this.txtCedulaMedic.setText(null);
    this.txtCedulaPaciente.setText(null);
    this.txtFecha.setDate(null);
    this.horas.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEspecialidadActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

private void guardar(){
    SimpleDateFormat fecha= new SimpleDateFormat("dd/MM/yyyy");
    String fechas= fecha.format(this.txtFecha.getDate().getTime());
    String hora=(String) this.horas.getSelectedItem();
    System.out.println(fechas);
arch.limpiar();
        arch.escribir("<Cita>");
        arch.escribir("<FechaDeLaCita>"+fechas+"</FechaDeLaCita>");
        arch.escribir("<HoraDeLaCita>"+hora+"</HoraDeLaCita>");
        arch.escribir("<CedulaMedico>"+this.txtCedulaMedic.getText()+"</CedulaMedico>");
        arch.escribir("<NombreMedico>"+this.txtNombreMedico.getText()+"</NombreMedico>");
        arch.escribir("<Especialidad>"+this.txtEspecialidad.getText()+"</Especialidad>");
        arch.escribir("<CedulaPaciente>"+this.txtCedulaPaciente.getText()+"</CedulaPaciente>");
        arch.escribir("<NombrePaciente>"+this.txtNombrePaciente.getText()+"</NombrePaciente>");
        arch.escribir("<FechaNacimientoPaciente>"+this.txtFechaPaciente.getText()+"</FechaNacimientoPaciente>");
        arch.escribir("<Comentario>"+"</Comentario>");
        arch.escribir("</Cita>");
        arch.guardar();
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> horas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField txtCedulaMedic;
    private javax.swing.JTextField txtCedulaPaciente;
    private javax.swing.JPanel txtDatoMedico;
    private javax.swing.JPanel txtDatoPaciente;
    private javax.swing.JTextField txtEspecialidad;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtFechaPaciente;
    private javax.swing.JTextField txtNombreMedico;
    private javax.swing.JTextField txtNombrePaciente;
    // End of variables declaration//GEN-END:variables
}
